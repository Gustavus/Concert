{% import _self as self %}
{% spaceless %}
  {%- set showMenuTitle = 'Show Concert Menu' -%}
  {%- set hideMenuTitle = 'Hide Concert Menu' -%}
  {%- set buttons = [] -%}
  <div id="concertMenu" class="concert-menu {% if not showMenu %} hidden{% endif %}">
    <div class="menu-content permanent">
      <a href="#" class="menu-activate-button menu-item" title="{% if not showMenu %}{{ showMenuTitle }}{% else %}{{ hideMenuTitle }}{% endif %}">
        Concert
      </a>
    </div>
    <div class="menu-content">
      <ul class="menu-bar">
        {%- for groupName,group in menu -%}
          {%- if group.type == 'menu' -%}
            <li class="menu-item">
              <a id="menu-{{groupName}}" class="menu-item-label" href="#" data-toggle="dropdown">{{ groupName|un_camel_case|title }} ▾</a>
              <ul class="menu-dropdown" role="menu" aria-labelledby="menu-{{groupName}}">
                {%- for item in group.items -%}
                  <li class="menu-dropdown-item"><a href="{{ item.url }}" class="{% if item.thickbox is not defined or item.thickbox == true %} thickbox{% endif %}{% if item.classes %} {{ item.classes }}{% endif %}"{% if item.id is defined %} id="{{ item.id }}"{% endif %}{{ self.renderThickboxData(item) }}>{{ item.text|replace({' ': '&nbsp;'})|raw }}</a></li>
                {%- endfor -%}
              </ul>
            </li>
          {%- elseif group.type == 'buttons' -%}
            {%- set buttons = group.items -%}
          {%- endif -%}
        {%- endfor -%}
      </ul>
    </div>
    <div class="menu-content right">
      <ul class="menu-bar">
        <li id="concertMessages" class="menu-item">
          <a class="menu-item-label" href="#" data-toggle="dropdown">Messages <span class="message-count" data-message-count>0</span> ▾</a>
          <div class="messages-dropdown" data-message-area></div>
        </li>
        {% if showMenu %}
          <li class="menu-item">
            <a href="{{ quitURL }}" class="menu-button danger quitConcert">Quit</a>
          </li>
        {% endif %}
      </ul>
    </div>
    <div class="menu-content">
      <ul class="menu-bar" id="primaryActions">
        {%- if buttons|length > 0 -%}
          {%- import 'actionButtons.js.twig' as actionButtons -%}
          {{ actionButtons.renderButtons(buttons) }}
        {%- endif -%}
      </ul>
    </div>
    <div class="clear"></div>
    <link rel="stylesheet" href="{{ renderResource(['dropdown-css'])}}" media="screen" title="no title" charset="utf-8">
    <script>
{#--#} Modernizr.load({
{#--#}   load: [Gustavus.baseSrc, '{{ renderResource(['dropdown'])}}'],
{#--#}   complete: function() {
{#--#}     $(function() {
{#--#}       var $concertMenu = $('.concert-menu');
{#--#}       $('.menu-activate-button').on('click.Concert.ShowMenu', function (e) {
{#--#}         e.preventDefault();
{#--#}         if ($concertMenu.hasClass('hidden')) {
{#--#}           $(this).attr('title', '{{ hideMenuTitle }}');
{#--#}           $concertMenu.removeClass('hidden');
{#--#}         } else {
{#--#}           $(this).attr('title', '{{ showMenuTitle }}');
{#--#}           $concertMenu.addClass('hidden');
{#--#}
{#--#}           var $concertBar = $('#concertMenu');
{#--#}           $concertBar.css('position', '');
{#--#}           $concertBar.css('width', '');
{#--#}           $concertBar.css('opacity', '');
{#--#}         }
{#--#}       });
{#--#}
{#--#}       if (!$concertMenu.hasClass('hidden')) {
{#--#}         $('#concertMessages a[data-toggle="dropdown"]').dropdown('show');
{#--#}       } else {
{#--#}         $('.menu-activate-button').one('click.Concert.ShowMessages', function (e) {
{#--#}           $('#concertMessages a[data-toggle="dropdown"]').dropdown('show');
{#--#}           return false;
{#--#}         });
{#--#}       }
{#--#}
{#--#}       $(window).scroll(function() {
{#--#}         var $concertMenu = $('#concertMenu');
{#--#}         if ($concertMenu.hasClass('hidden')) {
{#--#}           if ($(window).scrollTop() > 0) {
{#--#}             $concertMenu.css('position', '');
{#--#}             $concertMenu.css('width', '');
{#--#}             $concertMenu.css('opacity', '');
{#--#}           }
{#--#}           /* we don't want to scroll a hidden element */
{#--#}           return;
{#--#}         }
{#--#}         /* make sure the window isn't too narrow, otherwise we could be covering everything they can see. */
{#--#}         if ($(window).width() > 700 && $(window).scrollTop() > 0) {
{#--#}           $concertMenu.css('position', 'fixed');
{#--#}           $concertMenu.css('width', '100%');
{#--#}           $concertMenu.css('opacity', '0.9');
{#--#}         } else {
{#--#}           $concertMenu.css('position', '');
{#--#}           $concertMenu.css('width', '');
{#--#}           $concertMenu.css('opacity', '');
{#--#}         }
{#--#}       });
{#--#}
{#--#}       Extend.add('page', function() {
{#--#}         $('#cancelEditSiteNavMessage').on('click', function(e) {
{#--#}           e.preventDefault();
{#--#}           $(this).colorbox.close();
{#--#}         });
{#--#}       });
{#--#}     });
{#--#}   }
{#--#} });
    </script>
  </div>
{% endspaceless %}

{#
  Renders data attributes for thickbox.

  param: item Array of thickbox data attributes to be converted into html. Associative array of dataName => dataValue
#}
{% macro renderThickboxData(item) %}
  {%- for datum,value in item.thickboxData %} data-thickbox-{{ datum }}="{{ value }}"{% endfor -%}
{% endmacro renderThickboxData %}